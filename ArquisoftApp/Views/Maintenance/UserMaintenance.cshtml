
@{
    ViewBag.Title = "Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<asp:ScriptManager runat="server" EnablePageMethods="true">

    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Main content -->
        <!-- Usuarios -->
        <section class="content">

            <div class="card-body p-2" style="background-color:whitesmoke">
                <table class="display responsive nowrap" id="myTable" style="width:100%" data-page-length='10'>
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Nombre</th>
                            <th>Apellido</th>
                            <th>Correo</th>
                            <th>Nombre Usuario</th>
                            <th></th>
                        </tr>
                    </thead>

                </table>
            </div>
        </section>

    </div>
    <!-- /.content-wrapper -->
    <!-- Modal -->
    <div class="modal" id="usersModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add Stuff</h4>
                </div>
                <div class="modal-body">
                    <form role="form" id="userForm">

                        <input type="hidden" id="txtId" />

                        <div class="form-group">
                            <input type="checkbox" class="form-check-input m-0" id="chkEnable" checked>
                            <label class="form-check" for="chkEnable">Activo</label>
                        </div>

                        <div class="row">
                            <div class="form-group col-6">
                                <label for="txtName">Nombre: *</label>
                                <input type="text" class="form-control" id="txtName" name="txtName" placeholder="Nombre" autocomplete="off">
                            </div>
                            <div class="form-group col-6">
                                <label for="txtLastName">Apellido: *</label>
                                <input type="text" class="form-control" id="txtLastName" name="txtLastName" placeholder="Apellidos" autocomplete="off">
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-6">
                                <label for="txtUsername">Nombre de usuario: *</label>
                                <input type="text" class="form-control" id="txtUsername" name="txtUsername" placeholder="Usuario">
                            </div>
                            <div class="form-group col-6">
                                <label for="txtPassword">Contraseña: *</label>
                                <input type="password" class="form-control" id="txtPassword" name="txtPassword" placeholder="Contraseña">
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-6">
                                <label for="txtEmail">Correo: *</label>
                                <input type="text" class="form-control" id="txtEmail" name="txtEmail" placeholder="Correo electrónico">
                            </div>

                            <div class="form-group col-6">
                                <label for="cmbUserRole">Rol: </label>
                                <select class="custom-select form-control-border" id="cmbUserRole">
                                    <option>Seleccione una opción</option>
                                </select>
                            </div>
                            <p>* Campos requeridos</p>

                        </div>

                        <div class="modal-footer">
                            <button type="submit" class="btn btn-secondary" id="btnSaveIt">Guardar</button>
                            <button type="button" class="btn btn-default" id="btnCloseIt" data-dismiss="modal">Cerrar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- /.modal -->
    @*Modal Ayuda*@
    <div class="modal" id="userModalHelp" role="dialog">
        <div class="modal-dialog" style="overflow-y: initial !important">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="text-bold text-center">Ayuda Proceso Usuario del Sistema</h4>
                </div>
                @*Ayuda Agregar Proyectos*@
                <div class="modal-body" align="center" style="height: 80vh; overflow-y: auto;">
                    <h4><b>&nbsp;&nbsp;Gu&iacute;a para agregar un usuario nuevo:</b></h4>
                    <p>&nbsp;&nbsp;1- Da clic al bot&oacute;n “Agregar Nuevo”</p>
                    <div class="modal-body" align="left">
                        <img src="~/Content/img/Help/User/User01.JPG" class="img-rounded" alt="Cinque Terre" />
                    </div>
                    <p>&nbsp;&nbsp;2- Completa la informaci&oacute;n que se solicita en la pantalla</p>
                    <div class="modal-body" align="left">
                        <img src="~/Content/img/Help/User/User02.JPG" class="img-rounded" alt="Cinque Terre" />
                    </div>
                    <p>&nbsp;&nbsp; <b>1:</b>&nbsp;&nbsp;Nombre del usuario.</p>
                    <p>&nbsp;&nbsp; <b>2:</b>&nbsp;&nbsp;Apellidos del usuario.</p>
                    <p>&nbsp;&nbsp; <b>3:</b>&nbsp;&nbsp;Usuario a utilizar en el sistema.</p>
                    <p>&nbsp;&nbsp; <b>4:</b>&nbsp;&nbsp;Contraseña para ingresar al sistema.</p>
                    <p>&nbsp;&nbsp; <b>5:</b>&nbsp;&nbsp;Correo electr&oacute;nico del usuario.</p>
                    <p>&nbsp;&nbsp; <b>6:</b>&nbsp;&nbsp;Rol que va a tener este usuario.</p>
                    <br />
                    <p>&nbsp;&nbsp;3-	Una vez completada la informaci&oacute;n da clic al bot&oacute;n "Guardar"</p>
                    <div class="modal-body" align="left">
                        <img src="~/Content/img/Help/User/User03.JPG" class="img-rounded" alt="Cinque Terre" />
                    </div>
                    <br />
                    @*Ayuda Visualizar Proyectos*@

                    <h4><b>&nbsp;&nbsp;Gu&iacute;a para editar un usuario:</b></h4>
                    <p>&nbsp;&nbsp;1- Da clic al bot&oacute;n “Editar”.</p>
                    <div class="modal-body" align="left">
                        <img src="~/Content/img/Help/User/User04.JPG" class="img-rounded" alt="Cinque Terre" />
                    </div>
                    <br />
                    <p>&nbsp;&nbsp;2- Completa la información a editar.</p>
                    <div class="modal-body" align="left">
                        <img src="~/Content/img/Help/User/User05.JPG" class="img-rounded" alt="Cinque Terre" />
                    </div>
                    <br />
                    <p>&nbsp;&nbsp;3- Una vez realizado los cambios que se requieren da clic al bot&oacute;n "Guardar".</p>
                    <div class="modal-body" align="left">
                        <img src="~/Content/img/Help/User/User03.JPG" class="img-rounded" alt="Cinque Terre" />
                    </div>
                    <br />

                    <div class="modal-footer justify-content-between">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*/.modal*@


    @section scripts{

        <script>

            const api = new UserApi();
            const roleApi = new RoleApi();
            const emailRegex = app.enums.Regex.Email;
            const passwordRegex = app.enums.Regex.Password;

            var users_table,
                users_List;

            // On load event - Initial event
            $(document).ready(function () {
                $("#helpModalNav").attr('data-target', "#userModalHelp");
                LoadTable();
                LoadRoles();
            });

            // Load Table method
            function LoadTable() {
                users_table = $('#myTable').DataTable({
                "ajax": {
                    "url": "/ArquisoftApp/User/List",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "Id" },
                    { "data": "Name" },
                    { "data": "Last_Name" },
                    { "data": "Email" },
                    { "data": "Username" },
                    { "data": "Id", "render": function (data) {

                        var buttons = "";

                        buttons += "<button data-toggle='tooltip' data-placement='top' title='Acción para realizar cambios en los datos del usuario' class='btn btn-outline-secondary btn-sm' type='button' onclick='openModal(" + data + ", \"Editar Usuario\")'>Editar &nbsp;<i class='fas fa-pen'></i></button>"
                        buttons += "<button data-toggle='tooltip' data-placement='top' title='Acción para realizar el eliminado del usuario' class='btn btn-outline-secondary btn-sm ml-2' type='button' onclick='Delete(" + data + ")'> Eliminar &nbsp;<i class='fa fa-trash'></i></button>"

                        return buttons;

                        },
                        "orderable": false,
                        "searchable": false,
                        "width": "100px"
                    }
                ],
                dom: 'Bfrtip',
                buttons: [
                    {
                        text: 'Agregar Nuevo',
                        attr: { class: 'btn btn-secondary btn-sm' },
                        action: function (e, dt, node, config) {
                            openModal(0, "Agregar Usuario");
                        }
                    }
                 ],
                 "language": {
                        "url": "@Url.Content("~/Scripts/plugins/datatable/idioma/datatable.es-ES.json")"
                 }

                });

                // Methods who add or remove de styled classes
                $.validator.setDefaults({
                    //Add Error Class To Fieldset if field invalid
                    highlight: function (element) {
                        $(element).addClass('is-invalid').removeClass('is-valid');
                    },
                    //Add Valid Class To Fieldset if field valid
                    unhighlight: function (element) {
                        $(element).removeClass('is-invalid').addClass('is-valid');
                    },
                    errorPlacement: function (error, element) {
                        error.addClass('validation-error text-red small').insertAfter(element);
                    }
                });

                // Custom methods for validations
                $.validator.addMethod('emailRegex', function (value, element, parameter) {
                    return value.match(emailRegex);
                }, '');

                $.validator.addMethod('passwordRegex', function (value, element, parameter) {
                    return value.match(passwordRegex);
                }, '');

                // Form validations
                var validator = $("#userForm").validate({
                    rules: {
                        txtName: {
                            required: true,
                            minlength: 1
                        },
                        txtLastName: {
                            required: true,
                            minlength: 1
                        },
                        txtUsername: {
                            required: true,
                            minlength: 2
                        },
                        txtPassword: {
                            required: true,
                            passwordRegex: true,
                        },
                        txtEmail: {
                            required: true,
                            emailRegex: true
                        }
                    },
                    messages: {
                        txtName: {
                            required: "Requerido",
                            minlength: "Ingrese un nombre válido."
                        },
                        txtLastName: {
                            required: "Requerido",
                            minlength: "Ingrese un apellido válido."
                        },
                        txtUsername: {
                            required: "Requerido",
                            minlength: "Ingrese un nombre de usuario válido."
                        },
                        txtPassword: {
                            required: "Requerido",
                            passwordRegex: "La contraseña debe cumplir con: mínimo 9 caracteres, al menos una letra mayúscula, una letra minúscula, un número y un cáracter especial."
                        },
                        txtEmail: {
                            required: "Requerido",
                            emailRegex: "Ingrese un correo válido"
                        }
                    }
                });

            }

            // Open modal method
            function openModal($userId, action) {

                CleanModal();
                $("#txtId").val($userId);
                $(".modal-title").text(action);
                if ($userId != 0) {

                    api.GetUser($userId).then(user => {
                        var userData = user;

                        if (userData) {
                            $("#chkEnable").prop('checked', userData.IdState === app.enums.States.ACTIVE ? true : false);
                            $("#txtName").val(userData.Name);
                            $("#txtLastName").val(userData.Last_Name);
                            $("#txtEmail").val(userData.Email);
                            $("#txtPassword").val(userData.Password);
                            $("#txtUsername").val(userData.Username);
                            $("#cmbUserRole").val(userData.IdRole);
                        }
                        else
                            throw ("Data error from api");
                       // $("#chkEnable").prop('checked', true);

                    }).catch(err => {

                        console.log(err);
                        toastr.error("Ocurrió un error cargando los datos de usuario seleccionado.");
                    })
                }
                $('#usersModal').modal('show');

        }

            // Submit form method
            $("#userForm").on("submit", function (e) {
                if ($("#userForm").valid()) {
                    var $data = {
                        oUser: {
                            Id: parseInt($("#txtId").val()),
                            Name: $("#txtName").val(),
                            Last_Name: $("#txtLastName").val(),
                            Email: $("#txtEmail").val(),
                            Password: $("#txtPassword").val(),
                            Username: $("#txtUsername").val(),
                            idState: $("#chkEnable").prop('checked') ? app.enums.States.ACTIVE : app.enums.States.DISABLE,
                            IdRole: $("#cmbUserRole").val()
                        }
                    }

                    api.SaveUser($data).then(response => {
                        if (response.result === 'OK') {
                            users_table.ajax.reload();
                            $('#usersModal').modal('hide');
                            toastr.success('Usuario guardado correctamente.');
                        } else {
                            toastr.error(response.result);
                        }

                    }).catch(err => {

                        toastr.error("Ocurrió un error guardando los datos del usuario.");
                    })
                }
                else
                    toastr.error('Por favor valide los datos ingresados.');
            })

            // Delete user method
            function Delete($userId) {
                if (confirm("¿Realmente desea eliminar este usuario?")) {

                    api.DeleteUser($userId).then(response => {
                        if (response.result) {
                            users_table.ajax.reload();
                            toastr.success('Usuario eliminado correctamente.');
                        }
                    }).catch(err => {

                        toastr.error("Ocurrió un error eliminando los datos del usuario.");
                    })
                }
            }

            // Validate id exist invalid inputs
            function ValidateInputs() {
                return $(".is-invalid")[0] ? false : true;
            }

            function CleanModal() {

                $("#txtEmail").removeClass("is-invalid");
                $("#txtEmail").removeClass("is-valid");
                $("#txtPassword").removeClass("is-invalid");
                $("#txtPassword").removeClass("is-valid");
                $("#txtName").removeClass("is-invalid");
                $("#txtName").removeClass("is-valid");
                $("#txtLastName").removeClass("is-invalid");
                $("#txtLastName").removeClass("is-valid");
                $("#txtUsername").removeClass("is-invalid");
                $("#txtUsername").removeClass("is-valid");
                $('.validation-error').remove();


                $("#chkEnable").prop('checked', true);
                $("#txtName").val("");
                $("#txtLastName").val("");
                $("#txtEmail").val("");
                $("#txtPassword").val("");
                $("#txtUsername").val("");
            }

            function LoadRoles() {

                $('#cmbUserRole').empty();

                roleApi.ListRoles().then(roles => {
                    var $RoleSelect = $('#cmbUserRole');
                    $.each(roles.data, function (key, value) {
                        var $option = $("<option/>", {
                            value: value.Id,
                            text: value.Name
                        });

                        $RoleSelect.append($option);
                    })

                })


            }

        </script>
    }
