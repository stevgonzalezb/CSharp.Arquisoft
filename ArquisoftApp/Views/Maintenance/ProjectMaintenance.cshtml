
@{
    ViewBag.Title = "Proyecto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card card-secondary card-tabs">
                        <div class="card-header p-0 pt-1">
                            <ul class="nav nav-tabs" id="custom-tabs-two-tab" role="tablist">
                                <li class="pt-2 px-3"><h4 id="projectTitle" class="card-title">Nuevo Proyecto</h4></li>
                                <li class="nav-item">
                                    <a class="nav-link active" id="custom-tabs-two-home-tab" data-toggle="pill" href="#general-project" role="tab" aria-controls="custom-tabs-two-home" aria-selected="true">General</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="custom-tabs-two-profile-tab" data-toggle="pill" href="#budget-project" role="tab" aria-controls="custom-tabs-two-profile" aria-selected="false">Presupuestos</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="custom-tabs-two-messages-tab" data-toggle="pill" href="#project-files" role="tab" aria-controls="custom-tabs-two-messages" aria-selected="false">Adjuntos</a>
                                </li>
                            </ul>
                        </div>
                        <div class="card-body" style="background-color:whitesmoke;">
                            <div class="tab-content" id="custom-tabs-two-tabContent">
                                <div class="tab-pane show active" id="general-project" role="tabpanel" aria-labelledby="custom-tabs-two-home-tab" ">
                                    <form class="form-horizontal" id="generalForm">

                                        <input type="hidden" id="txtId" />
                                        <div class="row">
                                            <div class="form-group col-10">
                                                <label for="txtProjectName" class="col-form-label">Proyecto *</label>
                                                <input type="text" name="txtProjectName" class="form-control" id="txtProjectName" placeholder="Nombre Proyecto" maxlength="200" required>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-6">
                                                <label for="cmbClients">Cliente</label>
                                                <select id="cmbClients" class="form-control select2bs4" style="width: 100%;">
                                                </select>
                                            </div>

                                            <div class="form-group col-6">
                                                <label for="sliderSite" class="col-form-label">Terreno(m2)</label> = <label id="siteLabelValue">0</label>
                                                <div class="slider-green">
                                                    <input type="text" value="0" id="sliderSite" class="slider form-control" data-slider-min="0" data-slider-max="5000"
                                                           data-slider-step="100" data-slider-value="0" data-slider-orientation="horizontal"
                                                           data-slider-selection="before" data-slider-tooltip="show" style="width:100%;" onchange="changeLabelSite()">
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            
                                            <div class="form-group col-6">
                                                <label for="txtConstructor" class="col-form-label">Maestro de obras *</label>
                                                <input type="text" name="txtConstructor" class="form-control" id="txtConstructor" placeholder="Maestro de Obra" maxlength="200" required>
                                            </div>
                                            <div class="form-group col-6">
                                                <label for="sliderConstruction" class="col-form-label">Metros Construcción(m2)</label> = <label id="constructionLabelValue">0</label>
                                                <div class="slider-blue">
                                                    <input type="text" value="0" id="sliderConstruction" class="slider form-control" data-slider-min="0" data-slider-max="1000"
                                                           data-slider-step="10" data-slider-value="0" data-slider-orientation="horizontal"
                                                           data-slider-selection="before" data-slider-tooltip="show" style="width:100%;" onchange="changeLabelConstruction()" />
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="form-group col-6">
                                                <label for="txtLevels" class="col-form-label">No. Niveles *</label>
                                                <input type="text" class="form-control" name="txtLevels" id="txtLevels" placeholder="Niveles de las obra" maxlength="200" required>
                                            </div>
                                            <div class="form-group col-6">
                                                <label for="cmbSystems" class="col-form-label">Sistemas Constructivos *</label>
                                                <select id="cmbSystems" name="cmbSystems" class="select2bs4" multiple="multiple" data-placeholder="Sistemas Constructivos" style="width: 100%;">
                                                    <option value="1">Block</option>
                                                    <option value="2">Master Block</option>
                                                    <option value="3">Prefabricado</option>
                                                    <option value="4">Liviano/Seca</option>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="form-group col-6">
                                                <label for="txtComments" class="col-form-label">Notas/Comentarios</label>
                                                <textarea class="form-control" rows="3" cols="50" id="txtComments" name="txtDescription" maxlength="400"></textarea>
                                                <p>* Campos requeridos</p>
                                            </div>

                                            <div class="form-group col-6">
                                                <label for="txtProjectName" class="col-form-label">Status Proyecto</label>
                                                <div class="custom-control custom-radio">
                                                    <input class="custom-control-input custom-control-input-danger" type="radio" id="rbDanger" name="rbStatus">
                                                    <label for="rbDanger" class="custom-control-label">Detenido</label>
                                                </div>
                                                <div class="custom-control custom-radio">
                                                    <input class="custom-control-input custom-control-input-warning" type="radio" id="rbWarning" name="rbStatus">
                                                    <label for="rbWarning" class="custom-control-label">Critico</label>
                                                </div>
                                                <div class="custom-control custom-radio">
                                                    <input class="custom-control-input custom-control-input-success" type="radio" id="rbSuccess" name="rbStatus" checked>
                                                    <label for="rbSuccess" class="custom-control-label">Ejecución</label>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="form-group col-6">
                                                <button type="button" onclick="SaveProject()" class="btn btn-secondary">Guardar</button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="tab-pane" id="budget-project" role="tabpanel" aria-labelledby="custom-tabs-two-messages-tab">

                                    <div class="row">
                                        <div class="form-group col-12">
                                            <table class="display nowrap col-12" id="myTable" style="width:100%" data-page-length='10'>
                                                <thead>
                                                    <tr>
                                                        <th>Id</th>
                                                        <th>Nombre Presupuesto</th>
                                                        <th>Tipo</th>
                                                        <th>Fecha creación</th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane" id="project-files" role="tabpanel" aria-labelledby="custom-tabs-two-settings-tab">
                                    <!-- /.card -->
                                    <div class="card card-info">
                                        <div class="card-body p-3 ml-2 mr-2">
                                            <form id="frmAttachments">
                                                <div class="row">
                                                    <div class="form-group col-6">
                                                        <label for="exampleInputFile">Subir adjunto</label>
                                                        <div class="input-group">
                                                            <div class="custom-file">
                                                                <input type="file" class="custom-file-input" id="objInputFile">
                                                                <label class="custom-file-label" for="objInputFile">Seleccione un archivo</label>
                                                            </div>
                                                            <div class="input-group-append">
                                                                <button type="button" onclick="UploadFile()" class="btn btn-secondary">Guardar</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>

                                            <div class="row p-2">
                                                <div class="form-group col-12">
                                                    <table class="display nowrap" id="attachTable" style="width:100%" data-page-length='10'>
                                                        <thead>
                                                            <tr>
                                                                <th>Archivo</th>
                                                                <th>Tamaño Archivo(KB)</th>
                                                                <th></th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- /.card-body -->
                                    </div>
                                    <!-- /.card -->
                                </div>
                            </div>
                        </div>
                        <!-- /.card -->
                    </div>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>

<form class="modal" id="FormModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Nuevo Presupuesto</h4>

            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group col-12">
                        <label for="txtBudgetName">Nombre del Presupuesto *</label>
                        <input type="text" class="form-control" id="txtBudgetName" name="txtBudgetName">
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-12">
                        <label for="txtBudgetType">Tipo de Presupuesto</label>
                        <input type="text" class="form-control" id="txtBudgetType" name="txtProjectName" value="Materiales" disabled>
                        <p>* Campos requeridos</p>
                    </div>
                </div>

            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-secondary" onclick="SaveBudget()">Crear</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</form>

@section scripts{

    <!-- Bootstrap slider -->
    <script src="~/Scripts/AdminLTE/plugins/bootstrap-slider/bootstrap-slider.min.js"></script>
    <!-- Select2 -->
    <script src="~/Scripts/AdminLTE/plugins/select2/js/select2.full.min.js"></script>
    <!-- bs-custom-file-input -->
    <script src="~/Scripts/AdminLTE/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>


    <script>
        const api = new ProjectApi();
        const apiClients = new ClientApi();
        const apiBudget = new BudgetApi();

        var attachment_table,
            budget_table;

        $(document).ready(function () {

            $(async function () {

                // Inputs files
                bsCustomFileInput.init();

                //Initialize Select2 Elements
                await $('.select2').select2()

                /* BOOTSTRAP SLIDER */
                //await $('.slider').bootstrapSlider()
                await $('.slider').slider()

                //Initialize Select2 Elements
                $('.select2bs4').select2({
                    theme: 'bootstrap4'
                })
            });

            var url = new URL(window.location.href);
            var projectId = url.searchParams.get("Id");

            $("#helpModalNav").attr('data-target', "#projectPrincipalHelp");
            LoadGeneral(projectId);
            LoadBudgets(projectId);
            LoadAttachmentList(projectId);

        });

        //General Tab
        function LoadGeneral(projectId) {
            LoadClientList();
            api.GetGeneralData(projectId).then(response => {
                if (response.data) {

                    var project = JSON.parse(response.data)
                    $("#txtId").val(project[0].Id)
                    $("#projectTitle").text(project[0].Name);
                    $("#txtProjectName").val(project[0].Name);
                    $("#sliderSite").slider('setValue', project[0].SiteArea);
                    $("#siteLabelValue").text(project[0].SiteArea);
                    $("#sliderConstruction").slider('setValue', project[0].ConstructionArea);
                    $("#constructionLabelValue").text(project[0].ConstructionArea);
                    $("#txtLevels").val(project[0].Levels);
                    $("#txtConstructor").val(project[0].MasterBuilder);
                    $("#txtComments").val(project[0].Comments);
                    $("#cmbClients").val(project[0].IdClient).change();
                    if (project[0].ConstructionSystem)
                        $('#cmbSystems').val(project[0].ConstructionSystem.split('|')).change();

                    switch (project[0].Status) {
                        case "D":
                            $("#rbDanger").prop('checked', true);
                            break;
                        case "C":
                            $("#rbWarning").prop('checked', true);
                            break;
                        case "E":
                            $("#rbSuccess").prop('checked', true);
                            break;

                    }
                }
            })

            // Methods who add or remove de styled classes
            $.validator.setDefaults({
                //Add Error Class To Fieldset if field invalid
                highlight: function (element) {
                    $(element).addClass('is-invalid').removeClass('is-valid');
                },
                //Add Valid Class To Fieldset if field valid
                unhighlight: function (element) {
                    $(element).removeClass('is-invalid').addClass('is-valid');
                }
            });

            // Form validationsgeneralForm
            var validator = $("#generalForm").validate({
                rules: {
                    txtProjectName: {
                        required: true,
                        minlength: 1
                    },
                    txtLevels: {
                        required: true,
                        minlength: 1
                    },
                    cmbSystems: {
                        required: true,
                        minlength: 1
                    },
                    txtConstructor: {
                        required: true,
                        minlength: 1
                    }
                },
                messages: {
                    txtProjectName: {
                        required: "Requerido",
                        minlength: "Ingrese un nombre válido."
                    },
                    txtLevels: {
                        required: "Requerido",
                        minlength: "Ingrese un nivel de obra válido."
                    },
                    cmbSystems: {
                        required: "Requerido",
                        minlength: "Ingrese un sistema cosntructivo válido."
                    },
                    txtConstructor: {
                        required: "Requerido",
                        minlength: "Ingrese coon."
                    }
                }
            });

            // Form validationsgeneralForm
            var validator = $("#FormModal").validate({
                rules: {
                    txtBudgetName: {
                        required: true,
                        minlength: 1
                    }
                },
                messages: {
                    txtBudgetName: {
                        required: "Requerido",
                        minlength: "Ingrese un nombddre válido."
                    }
                }
            });

        }

        function changeLabelSite() {
            $("#siteLabelValue").text($("#sliderSite").val());
        }

        function changeLabelConstruction() {
            $("#constructionLabelValue").text($("#sliderConstruction").val());
        }

        function LoadClientList() {
            apiClients.ListClients().then(clients => {
                var $ClientSelect = $('#cmbClients');
                $.each(clients.data, function (key, value) {
                    var $option = $("<option/>", {
                        value: value.IdClient,
                        text: `${value.Name} ${value.Last_Name}`
                    });

                    $ClientSelect.append($option);
                });
            })

        }

        function SaveProject() {
            /*validarCampos();*/

            if ($("#generalForm").valid()) {

                if (true) {

                    var strConstructionSystem = "";
                    var status = $('input[name="rbStatus"]:checked').attr('id')

                    var conSystems = $("#cmbSystems").val();
                    if (conSystems.length > 0) {
                        $.each(conSystems, function (key, value) {
                            strConstructionSystem += `${value}|`
                        })
                    }

                    switch (status) {
                        case 'rbDanger':
                            status = 'D';
                            break;
                        case 'rbWarning':
                            status = 'C';
                            break;
                        case 'rbSuccess':
                            status = 'E';
                            break;
                    }


                    var $data = {
                        oProject: {
                            Id: parseInt($("#txtId").val()),
                            Name: $("#txtProjectName").val(),
                            SiteArea: $("#sliderSite").val(),
                            ConstructionArea: $("#sliderConstruction").val(),
                            Levels: $("#txtLevels").val(),
                            MasterBuilder:$("#txtConstructor").val(),
                            Comments: $("#txtComments").val(),
                            IdClient: parseInt($("#cmbClients").val()),
                            ConstructionSystem: strConstructionSystem,
                            Status: status
                        }
                    }



                    api.SaveProject($data).then(response => {
                        if (response.result === 'OK') {
                            toastr.success('Proyecto guardado correctamente.');
                            cleanValidatorProject();
                        } else {
                            toastr.error(response.result);
                        }

                    }).catch(err => {

                        toastr.error("Ocurrió un error guardando los datos del Proyecto.");
                    })
                }
                else
                    toastr.error('Por favor valide los datos ingresados.');
            } else {
                toastr.error('Por favor valide los datos ingresados.')
            }
            
        }


        // Budgets Tab
        function LoadBudgets(projectId) {
            budget_table = $('#myTable').DataTable({
                 "ajax": {
                    "url": `/ArquisoftApp/Budget/ListBudgets?projectId=${projectId}`,
                    "dataSrc": function (json) {

                        $.each(json.data, function (key, obj) {
                            val = obj.CreationDate;
                            obj.CreationDate = (new Date(parseInt(val.replace("/Date(", "").replace(")/", ""), 10))).toLocaleDateString('es-CR');;
                        });

                        return json.data;
                    }
                     //"type": "GET",
                     //"datatype": "json"
                 },
                 "columns": [
                     { "data": "Id" },
                     { "data": "Name" },
                     { "data": "Type" },
                     { "data": "CreationDate" },
                     {
                         "data": "Id", "render": function (data) {
                             var buttons = "";
                             buttons += "<button data-toggle='tooltip' data-placement='top' title='Acción para realizar cambios en los datos del presupuesto' class='btn btn-outline-secondary btn-sm' type='button' onclick='OpenBudget(" + data + ")'>Editar <i class='fas fa-pen'></i></button>"
                             buttons += "<button data-toggle='tooltip' data-placement='top' title='Acción para descargar este presupuesto' class='btn btn-outline-secondary btn-sm ml-2' type='button' onclick='CreateReport(" + data + ")'>Imprimir <i class='fas fa-download'></i></button>"
                             buttons += "<button data-toggle='tooltip' data-placement='top' title='Acción para enviar por email este presupuesto' class='btn btn-outline-secondary btn-sm ml-2' type='button' onclick='SendEmail(" + data + ")'>Enviar <i class='fas fa-envelope'></i></button>"
                             buttons += "<button data-toggle='tooltip' data-placement='top' title='Acción para realizar el eliminado de presupuestos' class='btn btn-outline-secondary btn-sm ml-2' type='button' onclick='DeleteBudget(" + data + ")'>Eliminar &nbsp;<i class='fa fa-trash'></i></button>"

                             return buttons;
                         },
                         "orderable": false,
                         "searchable": false,
                         "width": "100px"
                     }
                 ],
                 dom: 'Bfrtip',
                 buttons: [

                            {
                                text: 'Crear Nuevo',
                                attr: { class: 'btn btn-secondary btn-sm' },
                                action: function (e, dt, node, config) {
                                    OpenBudget(0);
                                }

                            }

                 ],
                 "language": {
                     "url": "@Url.Content("~/Scripts/plugins/datatable/idioma/datatable.es-ES.json")"
                 }

            });
        }

        function DeleteBudget($budgetId) {
            if (confirm("¿Realmente desea eliminar este presupuesto?")) {

                apiBudget.DeleteBudget($budgetId).then(response => {
                    if (response.result) {
                        budget_table.ajax.reload();
                        toastr.success('Presupuesto eliminado correctamente.');
                    }
                }).catch(err => {
                    toastr.error("Ocurrió un error eliminando los datos del presupuesto.");
                })
            }
        }

        function OpenBudget($budgetId) {
            CleanModalNewBudget();
            if ($budgetId == 0) {
                $('#FormModal').modal('show');
            }
            else
                window.location.href = `/ArquisoftApp/Budget/Instance?Id=${$budgetId}`;
        }

        function SaveBudget() {

            if ($("#FormModal").valid()) {
                if (true) {

                    var oUrl = new URL(window.location.href);
                    var oProjectId = oUrl.searchParams.get("Id");

                    var $data = {
                        oBudget: {
                            Id: 0,
                            Name: $("#txtBudgetName").val(),
                            Type: 'Materiales',
                            Fee: 0,
                            Total: 0,
                            ProjectId: oProjectId,
                            IdState: app.enums.States.ACTIVE
                        }
                    }

                    apiBudget.SaveBudget($data).then(response => {
                        if (response) {
                            toastr.success('Presupuesto creado correctamente.');
                            window.location.href = `/ArquisoftApp/Budget/Instance?Id=${response.result}`;
                        } else {
                            toastr.error(response.result);
                        }

                    }).catch(err => {

                        toastr.error("Ocurrió un error guardando el presupuesto.");
                    })
                }
                else
                    toastr.error('Por favor valide los datos ingresados.');
            } else {
                toastr.error('Por favor valide los datos ingresados.')
            }

            
        }

        function CreateReport($budgetId) {

            window.open(`/ArquisoftApp/Budget/Report?Id=${$budgetId}`, '_blank').focus();

            //window.location.href = `/ArquisoftApp/Budget/Report?Id=9`;
        }

        function SendEmail($budgetId) {
            apiBudget.SendReportToEmail($budgetId).then(response => {
                toastr.success('Correo enviado correctamente.');
            }).catch(err => {
                console.log(err);
                toastr.error("Ocurrió un error enviado el correo.");
            })
        }


        // Attachments Tab
        function LoadAttachmentList(projectId) {
            attachment_table = $('#attachTable').DataTable({
                "ajax": {
                    "url": `/ArquisoftApp/Project/ListAttachments?projectId=${projectId}`,
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "FileName" },
                    { "data": "FileSize" },
                    {
                        "data": "Id", "render": function (data) {
                            var buttons = "";
                            buttons += "<button data-toggle='tooltip' data-placement='top' title='Acción para descargar este adjunto a la maquina' class='btn btn-outline-secondary btn-sm ml-2' type='button' onclick='DownloadFile(" + data + ")'>Descargar <i class='fas fa-download'></i></button>"
                            buttons += "<button data-toggle='tooltip' data-placement='top' title='Acción para realizar el eliminado de adjuntos' class='btn btn-outline-secondary btn-sm ml-2' type='button' onclick='DeleteFile(" + data + ")'>Eliminar &nbsp;<i class='fa fa-trash'></i></button>"

                            return buttons;
                        },
                        "orderable": false,
                        "searchable": false,
                        "width": "100px"
                    }
                ],
                dom: '<"float-left"f>rt<"bottom"p><"clear">', //'Bfrtip',
                 buttons: [],
                 "language": {
                     "url": "@Url.Content("~/Scripts/plugins/datatable/idioma/datatable.es-ES.json")"
                 }

            });
        }

        function UploadFile() {

            var fileUpload = $("#objInputFile").get(0);
            var files = fileUpload.files;

            // Create FormData object
            var fileData = new FormData();

            // Looping over all files and add it to FormData object
            for (var i = 0; i < files.length; i++) {
                fileData.append(files[i].name, files[i]);
            }

            // Adding one more key to FormData object
            fileData.append('projectId', parseInt($("#txtId").val()));

            api.UploadAttachment(fileData).then(res => {
                toastr.success(res.result);
                $("#frmAttachments")[0].reset();
                attachment_table.ajax.reload();
            }).catch(err => {
                toastr.error("Ocurrió un error guardando los adjuntos.");
            })

        }

        function DownloadFile(attId) {
            let projectId = parseInt($("#txtId").val());
            window.location = `/ArquisoftApp/Project/DownloadFile?Id=${attId}&projectId=${projectId}`;
        }

        function DeleteFile(attId) {
            let projectId = parseInt($("#txtId").val());

            if (confirm("¿Realmente desea eliminar este adjunto?")) {
                api.DeleteFile(attId, projectId).then(res => {
                    if (res.result) {
                        attachment_table.ajax.reload();
                        toastr.success("Adjunto eliminado correctamente");
                    }
                }).catch(err => {
                    toastr.error("Ocurrió un error eliminando los datos del material.");
                })
            }

        }

        function validarCampos() {
            var elemento = document.getElementById("txtProjectName").value
            if (elemento == "") {
                toastr.error("Debes llenar el campo")
                return false
            }
        }

        function CleanModalNewBudget() {

            $("#txtBudgetName").removeClass("is-invalid");
            $("#txtBudgetName").removeClass("is-valid");
            $('.validation-error').remove();


            $("#txtBudgetName").val("");
        }

        function cleanValidatorProject() {

            $("#txtProjectName").removeClass("is-invalid");
            $("#txtProjectName").removeClass("is-valid");
            $("#txtConstructor").removeClass("is-invalid");
            $("#txtConstructor").removeClass("is-valid");
            $("#txtLevels").removeClass("is-invalid");
            $("#txtLevels").removeClass("is-valid");
            $("#cmbSystems").removeClass("is-invalid");
            $("#cmbSystems").removeClass("is-valid");
            $("#txtComments").removeClass("is-invalid");
            $("#txtComments").removeClass("is-valid");
            $('.validation-error').remove();


        }

    </script>


}